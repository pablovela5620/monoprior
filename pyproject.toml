[project]
name = "monopriors"
version = "0.2.0"
description = "Monocular Geometric Priors"
requires-python = ">=3.11.0"
readme = "README.md"

dependencies = [
    "opencv-python",
    "geffnet>=1.0.2",
    "calibur>=0.0.1",
    "omnidata-tools>=0.0.23",
    "hf-transfer>=0.1.6",
    "mmcv-lite>=2.2.0",
    # pypi only

]

[tool.setuptools.packages.find]
include = ["monopriors*", "tools*"]

[tool.pixi.project]
channels = ["https://prefix.dev/conda-forge"]
platforms = ["linux-64"]

[tool.pixi.system-requirements]
libc = { family = "glibc", version = "2.31" }
cuda = "12.0"

[tool.pixi.activation]
scripts = [".pixi.sh"]

[tool.pixi.tasks]
_install-wheel = "python -m pip install $WHL_PATH --force-reinstall"
_build-wheel = "python -m pip install build && python -m build"
_upload-pypi = "python -m pip install twine && twine check dist/*"
upload-hf = { cmd = "python tools/upload_to_hf.py", depends-on = [
    "_build-wheel",
] }

[tool.pixi.tasks._download-example]
cmd = """
    test -e data/example-room-scan-poly.zip
    || (
        huggingface-cli download pablovela5620/sample-polycam-room \
        example-room-scan-poly.zip --repo-type dataset \
        --local-dir data/
    )
    """
outputs = ["data/example-room-scan-poly.zip"]
description = "Downloads an example polycam dataset from huggingface"

[tool.pixi.tasks.polycam-inference]
cmd = """
    python tools/inference_polycam.py \
    --polycam-zip-path data/example-room-scan-poly.zip
    """
depends-on = ["_download-example"]
description = "Runs inference on polycam dataset on downloaded example, this will predict depths+normals"


[tool.pixi.tasks.vo]
cmd = """
    python tools/inference_polycam.py \
    --polycam-zip-path data/example-room-scan-poly.zip
    """
depends-on = ["_download-example"]
description = "Runs inference on polycam dataset on downloaded example, this will predict depths+normals"

[tool.pixi.feature.app.tasks.app]
cmd = """
    python tools/gradio_app.py
    """
description = "Runs Gradio frontend for depth comparison"

[tool.pixi.feature.app.tasks.dev-app]
cmd = """
    gradio tools/gradio_app.py
    """
description = "Runs Gradio frontend for hotreload"

[tool.pixi.feature.spaces.tasks.zero-app]
cmd = """
    PYTORCH_JIT=0 python gradio_app.py
    """
description = "Runs Gradio frontend for depth comparison"
depends-on = ["_install-wheel"]

[tool.pixi.dependencies]
python = "3.11.*"
pip = "24.*"
icecream = ">=2.1.3,<2.2"
jaxtyping = ">=0.2.36,<0.3"
einops = ">=0.8.0,<0.9"
matplotlib = ">=3.8.3,<3.9"
wandb = ">=0.16.5,<0.17"
scipy = ">=1.12.0,<1.13"
timm = ">=0.9.16,<0.10"
pandas = ">=2.2.2,<2.3"
pyarrow = ">=15.0.2,<15.1"
pytorch-lightning = ">=2.2.2,<2.3"
jupyterlab = ">=4.2.0,<4.3"
numpy = "<2.0.0"
beartype = ">=0.19,<0.20"
transformers = ">=4.42.3,<4.43"
rerun-sdk = ">=0.21.0,<0.22"
pyserde = ">=0.23.0,<0.24"
tyro = ">=0.9.1,<0.10"
pytorch-gpu = ">=2.4.0,<3"
xformers = ">=0.0.27,<0.0.28"
open3d = ">=0.19.0,<0.20"

[tool.pixi.pypi-dependencies]
monopriors = { path = ".", editable = true }
simplecv = { git = "https://github.com/pablovela5620/simplecv.git" }

[tool.pixi.feature.app.dependencies]
gradio = "<5"

[tool.pixi.feature.app.pypi-dependencies]
gradio-rerun = { url = "https://huggingface.co/datasets/pablovela5620/gradio4-rerun-0.21/resolve/main/dist/gradio_rerun-0.0.10-py3-none-any.whl" }

[tool.pixi.feature.spaces.pypi-dependencies]
spaces = "*"

[tool.pixi.environments]
app = { features = ["app"], solve-group = "default" }
spaces = { features = ["spaces"], solve-group = "app" }

[tool.ruff]
ignore = [
    "F722", # Forward annotation false positive from jaxtyping. Should be caught by pyright.
]
